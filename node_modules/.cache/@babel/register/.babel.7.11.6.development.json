{
  "{\"sourceRoot\":\"/home/naveenpranesh/delta_test/testing/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/naveenpranesh/delta_test/testing\",\"filename\":\"/home/naveenpranesh/delta_test/testing/app.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/naveenpranesh/delta_test/testing\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/naveenpranesh/delta_test/testing/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/naveenpranesh/delta_test/testing",
      "filename": "/home/naveenpranesh/delta_test/testing/app.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/naveenpranesh/delta_test/testing",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/naveenpranesh/delta_test/testing/app.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/naveenpranesh/delta_test/testing/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/naveenpranesh/delta_test/testing/",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])();\napp.use(_bodyParser[\"default\"].json());\napp.get('/api', function (req, res) {\n  res.send(\"Welcome to Node Babel\");\n});\napp.post('/api/add', verifyToken, function (req, res) {\n  _jsonwebtoken[\"default\"].verify(req.token, 'secretkey', function (err, authData) {\n    if (err) {\n      console.log(req.token);\n      console.log(err);\n      res.sendStatus(403);\n    }\n\n    res.json({\n      message: \"Post Created.....\",\n      authData: authData\n    });\n  });\n});\napp.post('/api/login', function (req, res) {\n  var user = {\n    id: 1,\n    username: \"Naveen\",\n    email: 'naveen@gmail.com'\n  };\n\n  _jsonwebtoken[\"default\"].sign({\n    user: user\n  }, 'secretkey', function (err, token) {\n    if (err) {\n      res.sendStatus(403);\n    }\n\n    res.json({\n      token: token\n    });\n  });\n}); //Format of TOKEN\n//Authorization:Bearer ,access_token>\n//verify token\n\nfunction verifyToken(req, res, next) {\n  //get Auth header value\n  var bearerHeader = req.headers['authorization']; //check if bearer is undefined\n\n  if (typeof bearerHeader !== 'undefined') {\n    //Split at the space\n    var bearer = bearerHeader.split(' '); //Get token from array\n\n    var bearerToken = bearer[1]; //Set the token\n\n    req.token = bearerToken;\n    next();\n  } else {\n    res.sendStatus(403);\n  }\n}\n\napp.listen(5000, function () {\n  console.log(\"app is listening to port 5000\");\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJhcHAiLCJ1c2UiLCJib2R5UGFyc2VyIiwianNvbiIsImdldCIsInJlcSIsInJlcyIsInNlbmQiLCJwb3N0IiwidmVyaWZ5VG9rZW4iLCJqd3QiLCJ2ZXJpZnkiLCJ0b2tlbiIsImVyciIsImF1dGhEYXRhIiwiY29uc29sZSIsImxvZyIsInNlbmRTdGF0dXMiLCJtZXNzYWdlIiwidXNlciIsImlkIiwidXNlcm5hbWUiLCJlbWFpbCIsInNpZ24iLCJuZXh0IiwiYmVhcmVySGVhZGVyIiwiaGVhZGVycyIsImJlYXJlciIsInNwbGl0IiwiYmVhcmVyVG9rZW4iLCJsaXN0ZW4iXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7QUFDQSxJQUFNQSxHQUFHLEdBQUcsMEJBQVo7QUFFQUEsR0FBRyxDQUFDQyxHQUFKLENBQVFDLHVCQUFXQyxJQUFYLEVBQVI7QUFFQUgsR0FBRyxDQUFDSSxHQUFKLENBQVEsTUFBUixFQUFnQixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUMxQkEsRUFBQUEsR0FBRyxDQUFDQyxJQUFKLENBQVMsdUJBQVQ7QUFDSCxDQUZEO0FBSUFQLEdBQUcsQ0FBQ1EsSUFBSixDQUFTLFVBQVQsRUFBcUJDLFdBQXJCLEVBQWtDLFVBQUNKLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQzVDSSwyQkFBSUMsTUFBSixDQUFXTixHQUFHLENBQUNPLEtBQWYsRUFBc0IsV0FBdEIsRUFBbUMsVUFBQ0MsR0FBRCxFQUFNQyxRQUFOLEVBQW1CO0FBQ2xELFFBQUlELEdBQUosRUFBUztBQUNMRSxNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWVgsR0FBRyxDQUFDTyxLQUFoQjtBQUVBRyxNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUgsR0FBWjtBQUVBUCxNQUFBQSxHQUFHLENBQUNXLFVBQUosQ0FBZSxHQUFmO0FBQ0g7O0FBQ0RYLElBQUFBLEdBQUcsQ0FBQ0gsSUFBSixDQUFTO0FBQ0xlLE1BQUFBLE9BQU8sRUFBRSxtQkFESjtBQUVMSixNQUFBQSxRQUFRLEVBQVJBO0FBRkssS0FBVDtBQUlILEdBWkQ7QUFjSCxDQWZEO0FBaUJBZCxHQUFHLENBQUNRLElBQUosQ0FBUyxZQUFULEVBQXVCLFVBQUNILEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2pDLE1BQU1hLElBQUksR0FBRztBQUNUQyxJQUFBQSxFQUFFLEVBQUUsQ0FESztBQUVUQyxJQUFBQSxRQUFRLEVBQUUsUUFGRDtBQUdUQyxJQUFBQSxLQUFLLEVBQUU7QUFIRSxHQUFiOztBQUtBWiwyQkFBSWEsSUFBSixDQUFTO0FBQ0xKLElBQUFBLElBQUksRUFBSkE7QUFESyxHQUFULEVBRUcsV0FGSCxFQUVnQixVQUFDTixHQUFELEVBQU1ELEtBQU4sRUFBZ0I7QUFDNUIsUUFBR0MsR0FBSCxFQUFPO0FBQ0hQLE1BQUFBLEdBQUcsQ0FBQ1csVUFBSixDQUFlLEdBQWY7QUFDSDs7QUFDRFgsSUFBQUEsR0FBRyxDQUFDSCxJQUFKLENBQVM7QUFDTFMsTUFBQUEsS0FBSyxFQUFMQTtBQURLLEtBQVQ7QUFHSCxHQVREO0FBVUgsQ0FoQkQsRSxDQWtCQTtBQUNBO0FBRUE7O0FBRUEsU0FBU0gsV0FBVCxDQUFxQkosR0FBckIsRUFBMEJDLEdBQTFCLEVBQStCa0IsSUFBL0IsRUFBcUM7QUFDakM7QUFDQSxNQUFNQyxZQUFZLEdBQUdwQixHQUFHLENBQUNxQixPQUFKLENBQVksZUFBWixDQUFyQixDQUZpQyxDQUdqQzs7QUFDQSxNQUFJLE9BQU9ELFlBQVAsS0FBd0IsV0FBNUIsRUFBeUM7QUFDckM7QUFDQSxRQUFNRSxNQUFNLEdBQUdGLFlBQVksQ0FBQ0csS0FBYixDQUFtQixHQUFuQixDQUFmLENBRnFDLENBR3JDOztBQUNBLFFBQU1DLFdBQVcsR0FBR0YsTUFBTSxDQUFDLENBQUQsQ0FBMUIsQ0FKcUMsQ0FLckM7O0FBQ0F0QixJQUFBQSxHQUFHLENBQUNPLEtBQUosR0FBWWlCLFdBQVo7QUFFQUwsSUFBQUEsSUFBSTtBQUNQLEdBVEQsTUFTTztBQUNIbEIsSUFBQUEsR0FBRyxDQUFDVyxVQUFKLENBQWUsR0FBZjtBQUNIO0FBQ0o7O0FBRURqQixHQUFHLENBQUM4QixNQUFKLENBQVcsSUFBWCxFQUFpQixZQUFNO0FBQ25CZixFQUFBQSxPQUFPLENBQUNDLEdBQVI7QUFDSCxDQUZEIiwic291cmNlUm9vdCI6Ii9ob21lL25hdmVlbnByYW5lc2gvZGVsdGFfdGVzdC90ZXN0aW5nLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gXCJleHByZXNzXCI7XG5pbXBvcnQgYm9keVBhcnNlciBmcm9tIFwiYm9keS1wYXJzZXJcIjtcbmltcG9ydCBqd3QgZnJvbSBcImpzb253ZWJ0b2tlblwiO1xuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcblxuYXBwLmdldCgnL2FwaScsIChyZXEsIHJlcykgPT4ge1xuICAgIHJlcy5zZW5kKFwiV2VsY29tZSB0byBOb2RlIEJhYmVsXCIpXG59KTtcblxuYXBwLnBvc3QoJy9hcGkvYWRkJywgdmVyaWZ5VG9rZW4sIChyZXEsIHJlcykgPT4ge1xuICAgIGp3dC52ZXJpZnkocmVxLnRva2VuLCAnc2VjcmV0a2V5JywgKGVyciwgYXV0aERhdGEpID0+IHtcbiAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgY29uc29sZS5sb2cocmVxLnRva2VuKVxuXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICByZXMuc2VuZFN0YXR1cyg0MDMpO1xuICAgICAgICB9XG4gICAgICAgIHJlcy5qc29uKHtcbiAgICAgICAgICAgIG1lc3NhZ2U6IFwiUG9zdCBDcmVhdGVkLi4uLi5cIixcbiAgICAgICAgICAgIGF1dGhEYXRhXG4gICAgICAgIH0pXG4gICAgfSlcblxufSlcblxuYXBwLnBvc3QoJy9hcGkvbG9naW4nLCAocmVxLCByZXMpID0+IHtcbiAgICBjb25zdCB1c2VyID0ge1xuICAgICAgICBpZDogMSxcbiAgICAgICAgdXNlcm5hbWU6IFwiTmF2ZWVuXCIsXG4gICAgICAgIGVtYWlsOiAnbmF2ZWVuQGdtYWlsLmNvbSdcbiAgICB9XG4gICAgand0LnNpZ24oe1xuICAgICAgICB1c2VyXG4gICAgfSwgJ3NlY3JldGtleScsIChlcnIsIHRva2VuKSA9PiB7XG4gICAgICAgIGlmKGVycil7XG4gICAgICAgICAgICByZXMuc2VuZFN0YXR1cyg0MDMpO1xuICAgICAgICB9XG4gICAgICAgIHJlcy5qc29uKHtcbiAgICAgICAgICAgIHRva2VuXG4gICAgICAgIH0pO1xuICAgIH0pXG59KTtcblxuLy9Gb3JtYXQgb2YgVE9LRU5cbi8vQXV0aG9yaXphdGlvbjpCZWFyZXIgLGFjY2Vzc190b2tlbj5cblxuLy92ZXJpZnkgdG9rZW5cblxuZnVuY3Rpb24gdmVyaWZ5VG9rZW4ocmVxLCByZXMsIG5leHQpIHtcbiAgICAvL2dldCBBdXRoIGhlYWRlciB2YWx1ZVxuICAgIGNvbnN0IGJlYXJlckhlYWRlciA9IHJlcS5oZWFkZXJzWydhdXRob3JpemF0aW9uJ107XG4gICAgLy9jaGVjayBpZiBiZWFyZXIgaXMgdW5kZWZpbmVkXG4gICAgaWYgKHR5cGVvZiBiZWFyZXJIZWFkZXIgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIC8vU3BsaXQgYXQgdGhlIHNwYWNlXG4gICAgICAgIGNvbnN0IGJlYXJlciA9IGJlYXJlckhlYWRlci5zcGxpdCgnICcpO1xuICAgICAgICAvL0dldCB0b2tlbiBmcm9tIGFycmF5XG4gICAgICAgIGNvbnN0IGJlYXJlclRva2VuID0gYmVhcmVyWzFdO1xuICAgICAgICAvL1NldCB0aGUgdG9rZW5cbiAgICAgICAgcmVxLnRva2VuID0gYmVhcmVyVG9rZW47XG4gICAgICAgIFxuICAgICAgICBuZXh0KCk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmVzLnNlbmRTdGF0dXMoNDAzKTtcbiAgICB9XG59XG5cbmFwcC5saXN0ZW4oNTAwMCwgKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKGBhcHAgaXMgbGlzdGVuaW5nIHRvIHBvcnQgNTAwMGApO1xufSkiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "app",
        "use",
        "bodyParser",
        "json",
        "get",
        "req",
        "res",
        "send",
        "post",
        "verifyToken",
        "jwt",
        "verify",
        "token",
        "err",
        "authData",
        "console",
        "log",
        "sendStatus",
        "message",
        "user",
        "id",
        "username",
        "email",
        "sign",
        "next",
        "bearerHeader",
        "headers",
        "bearer",
        "split",
        "bearerToken",
        "listen"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;;;AACA,IAAMA,GAAG,GAAG,0BAAZ;AAEAA,GAAG,CAACC,GAAJ,CAAQC,uBAAWC,IAAX,EAAR;AAEAH,GAAG,CAACI,GAAJ,CAAQ,MAAR,EAAgB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC1BA,EAAAA,GAAG,CAACC,IAAJ,CAAS,uBAAT;AACH,CAFD;AAIAP,GAAG,CAACQ,IAAJ,CAAS,UAAT,EAAqBC,WAArB,EAAkC,UAACJ,GAAD,EAAMC,GAAN,EAAc;AAC5CI,2BAAIC,MAAJ,CAAWN,GAAG,CAACO,KAAf,EAAsB,WAAtB,EAAmC,UAACC,GAAD,EAAMC,QAAN,EAAmB;AAClD,QAAID,GAAJ,EAAS;AACLE,MAAAA,OAAO,CAACC,GAAR,CAAYX,GAAG,CAACO,KAAhB;AAEAG,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AAEAP,MAAAA,GAAG,CAACW,UAAJ,CAAe,GAAf;AACH;;AACDX,IAAAA,GAAG,CAACH,IAAJ,CAAS;AACLe,MAAAA,OAAO,EAAE,mBADJ;AAELJ,MAAAA,QAAQ,EAARA;AAFK,KAAT;AAIH,GAZD;AAcH,CAfD;AAiBAd,GAAG,CAACQ,IAAJ,CAAS,YAAT,EAAuB,UAACH,GAAD,EAAMC,GAAN,EAAc;AACjC,MAAMa,IAAI,GAAG;AACTC,IAAAA,EAAE,EAAE,CADK;AAETC,IAAAA,QAAQ,EAAE,QAFD;AAGTC,IAAAA,KAAK,EAAE;AAHE,GAAb;;AAKAZ,2BAAIa,IAAJ,CAAS;AACLJ,IAAAA,IAAI,EAAJA;AADK,GAAT,EAEG,WAFH,EAEgB,UAACN,GAAD,EAAMD,KAAN,EAAgB;AAC5B,QAAGC,GAAH,EAAO;AACHP,MAAAA,GAAG,CAACW,UAAJ,CAAe,GAAf;AACH;;AACDX,IAAAA,GAAG,CAACH,IAAJ,CAAS;AACLS,MAAAA,KAAK,EAALA;AADK,KAAT;AAGH,GATD;AAUH,CAhBD,E,CAkBA;AACA;AAEA;;AAEA,SAASH,WAAT,CAAqBJ,GAArB,EAA0BC,GAA1B,EAA+BkB,IAA/B,EAAqC;AACjC;AACA,MAAMC,YAAY,GAAGpB,GAAG,CAACqB,OAAJ,CAAY,eAAZ,CAArB,CAFiC,CAGjC;;AACA,MAAI,OAAOD,YAAP,KAAwB,WAA5B,EAAyC;AACrC;AACA,QAAME,MAAM,GAAGF,YAAY,CAACG,KAAb,CAAmB,GAAnB,CAAf,CAFqC,CAGrC;;AACA,QAAMC,WAAW,GAAGF,MAAM,CAAC,CAAD,CAA1B,CAJqC,CAKrC;;AACAtB,IAAAA,GAAG,CAACO,KAAJ,GAAYiB,WAAZ;AAEAL,IAAAA,IAAI;AACP,GATD,MASO;AACHlB,IAAAA,GAAG,CAACW,UAAJ,CAAe,GAAf;AACH;AACJ;;AAEDjB,GAAG,CAAC8B,MAAJ,CAAW,IAAX,EAAiB,YAAM;AACnBf,EAAAA,OAAO,CAACC,GAAR;AACH,CAFD",
      "sourceRoot": "/home/naveenpranesh/delta_test/testing/",
      "sourcesContent": [
        "import express from \"express\";\nimport bodyParser from \"body-parser\";\nimport jwt from \"jsonwebtoken\";\nconst app = express();\n\napp.use(bodyParser.json());\n\napp.get('/api', (req, res) => {\n    res.send(\"Welcome to Node Babel\")\n});\n\napp.post('/api/add', verifyToken, (req, res) => {\n    jwt.verify(req.token, 'secretkey', (err, authData) => {\n        if (err) {\n            console.log(req.token)\n\n            console.log(err);\n            \n            res.sendStatus(403);\n        }\n        res.json({\n            message: \"Post Created.....\",\n            authData\n        })\n    })\n\n})\n\napp.post('/api/login', (req, res) => {\n    const user = {\n        id: 1,\n        username: \"Naveen\",\n        email: 'naveen@gmail.com'\n    }\n    jwt.sign({\n        user\n    }, 'secretkey', (err, token) => {\n        if(err){\n            res.sendStatus(403);\n        }\n        res.json({\n            token\n        });\n    })\n});\n\n//Format of TOKEN\n//Authorization:Bearer ,access_token>\n\n//verify token\n\nfunction verifyToken(req, res, next) {\n    //get Auth header value\n    const bearerHeader = req.headers['authorization'];\n    //check if bearer is undefined\n    if (typeof bearerHeader !== 'undefined') {\n        //Split at the space\n        const bearer = bearerHeader.split(' ');\n        //Get token from array\n        const bearerToken = bearer[1];\n        //Set the token\n        req.token = bearerToken;\n        \n        next();\n    } else {\n        res.sendStatus(403);\n    }\n}\n\napp.listen(5000, () => {\n    console.log(`app is listening to port 5000`);\n})"
      ]
    },
    "sourceType": "script",
    "mtime": 1601686899790
  },
  "{\"sourceRoot\":\"/home/naveenpranesh/test/testin1/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/naveenpranesh/test/testin1\",\"filename\":\"/home/naveenpranesh/test/testin1/app.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/naveenpranesh/test/testin1\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/naveenpranesh/test/testin1/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/naveenpranesh/test/testin1",
      "filename": "/home/naveenpranesh/test/testin1/app.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/naveenpranesh/test/testin1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/naveenpranesh/test/testin1/app.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/naveenpranesh/test/testin1/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/naveenpranesh/test/testin1/",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "import express from \"express\";\nimport bodyParser from \"body-parser\";\nimport jwt from \"jsonwebtoken\";\nconst app = express();\napp.use(bodyParser.json());\napp.get('/api', (req, res) => {\n  res.send(\"Welcome to Node Babel\");\n});\napp.post('/api/add', verifyToken, (req, res) => {\n  jwt.verify(req.token, 'secretkey', (err, authData) => {\n    if (err) {\n      console.log(req.token);\n      console.log(err);\n      res.sendStatus(403);\n    }\n\n    res.json({\n      message: \"Post Created.....\",\n      authData\n    });\n  });\n});\napp.post('/api/login', (req, res) => {\n  const user = {\n    id: 1,\n    username: \"Naveen\",\n    email: 'naveen@gmail.com'\n  };\n  jwt.sign({\n    user\n  }, 'secretkey', (err, token) => {\n    if (err) {\n      res.sendStatus(403);\n    }\n\n    res.json({\n      token\n    });\n  });\n}); //Format of TOKEN\n//Authorization:Bearer ,access_token>\n//verify token\n\nfunction verifyToken(req, res, next) {\n  //get Auth header value\n  const bearerHeader = req.headers['authorization']; //check if bearer is undefined\n\n  if (typeof bearerHeader !== 'undefined') {\n    //Split at the space\n    const bearer = bearerHeader.split(' '); //Get token from array\n\n    const bearerToken = bearer[1]; //Set the token\n\n    req.token = bearerToken;\n    next();\n  } else {\n    res.sendStatus(403);\n  }\n}\n\napp.listen(5000, () => {\n  console.log(`app is listening to port 5000`);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwiYm9keVBhcnNlciIsImp3dCIsImFwcCIsInVzZSIsImpzb24iLCJnZXQiLCJyZXEiLCJyZXMiLCJzZW5kIiwicG9zdCIsInZlcmlmeVRva2VuIiwidmVyaWZ5IiwidG9rZW4iLCJlcnIiLCJhdXRoRGF0YSIsImNvbnNvbGUiLCJsb2ciLCJzZW5kU3RhdHVzIiwibWVzc2FnZSIsInVzZXIiLCJpZCIsInVzZXJuYW1lIiwiZW1haWwiLCJzaWduIiwibmV4dCIsImJlYXJlckhlYWRlciIsImhlYWRlcnMiLCJiZWFyZXIiLCJzcGxpdCIsImJlYXJlclRva2VuIiwibGlzdGVuIl0sIm1hcHBpbmdzIjoiQUFBQSxPQUFPQSxPQUFQLE1BQW9CLFNBQXBCO0FBQ0EsT0FBT0MsVUFBUCxNQUF1QixhQUF2QjtBQUNBLE9BQU9DLEdBQVAsTUFBZ0IsY0FBaEI7QUFDQSxNQUFNQyxHQUFHLEdBQUdILE9BQU8sRUFBbkI7QUFFQUcsR0FBRyxDQUFDQyxHQUFKLENBQVFILFVBQVUsQ0FBQ0ksSUFBWCxFQUFSO0FBRUFGLEdBQUcsQ0FBQ0csR0FBSixDQUFRLE1BQVIsRUFBZ0IsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEtBQWM7QUFDMUJBLEVBQUFBLEdBQUcsQ0FBQ0MsSUFBSixDQUFTLHVCQUFUO0FBQ0gsQ0FGRDtBQUlBTixHQUFHLENBQUNPLElBQUosQ0FBUyxVQUFULEVBQXFCQyxXQUFyQixFQUFrQyxDQUFDSixHQUFELEVBQU1DLEdBQU4sS0FBYztBQUM1Q04sRUFBQUEsR0FBRyxDQUFDVSxNQUFKLENBQVdMLEdBQUcsQ0FBQ00sS0FBZixFQUFzQixXQUF0QixFQUFtQyxDQUFDQyxHQUFELEVBQU1DLFFBQU4sS0FBbUI7QUFDbEQsUUFBSUQsR0FBSixFQUFTO0FBQ0xFLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZVixHQUFHLENBQUNNLEtBQWhCO0FBRUFHLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSCxHQUFaO0FBRUFOLE1BQUFBLEdBQUcsQ0FBQ1UsVUFBSixDQUFlLEdBQWY7QUFDSDs7QUFDRFYsSUFBQUEsR0FBRyxDQUFDSCxJQUFKLENBQVM7QUFDTGMsTUFBQUEsT0FBTyxFQUFFLG1CQURKO0FBRUxKLE1BQUFBO0FBRkssS0FBVDtBQUlILEdBWkQ7QUFjSCxDQWZEO0FBaUJBWixHQUFHLENBQUNPLElBQUosQ0FBUyxZQUFULEVBQXVCLENBQUNILEdBQUQsRUFBTUMsR0FBTixLQUFjO0FBQ2pDLFFBQU1ZLElBQUksR0FBRztBQUNUQyxJQUFBQSxFQUFFLEVBQUUsQ0FESztBQUVUQyxJQUFBQSxRQUFRLEVBQUUsUUFGRDtBQUdUQyxJQUFBQSxLQUFLLEVBQUU7QUFIRSxHQUFiO0FBS0FyQixFQUFBQSxHQUFHLENBQUNzQixJQUFKLENBQVM7QUFDTEosSUFBQUE7QUFESyxHQUFULEVBRUcsV0FGSCxFQUVnQixDQUFDTixHQUFELEVBQU1ELEtBQU4sS0FBZ0I7QUFDNUIsUUFBR0MsR0FBSCxFQUFPO0FBQ0hOLE1BQUFBLEdBQUcsQ0FBQ1UsVUFBSixDQUFlLEdBQWY7QUFDSDs7QUFDRFYsSUFBQUEsR0FBRyxDQUFDSCxJQUFKLENBQVM7QUFDTFEsTUFBQUE7QUFESyxLQUFUO0FBR0gsR0FURDtBQVVILENBaEJELEUsQ0FrQkE7QUFDQTtBQUVBOztBQUVBLFNBQVNGLFdBQVQsQ0FBcUJKLEdBQXJCLEVBQTBCQyxHQUExQixFQUErQmlCLElBQS9CLEVBQXFDO0FBQ2pDO0FBQ0EsUUFBTUMsWUFBWSxHQUFHbkIsR0FBRyxDQUFDb0IsT0FBSixDQUFZLGVBQVosQ0FBckIsQ0FGaUMsQ0FHakM7O0FBQ0EsTUFBSSxPQUFPRCxZQUFQLEtBQXdCLFdBQTVCLEVBQXlDO0FBQ3JDO0FBQ0EsVUFBTUUsTUFBTSxHQUFHRixZQUFZLENBQUNHLEtBQWIsQ0FBbUIsR0FBbkIsQ0FBZixDQUZxQyxDQUdyQzs7QUFDQSxVQUFNQyxXQUFXLEdBQUdGLE1BQU0sQ0FBQyxDQUFELENBQTFCLENBSnFDLENBS3JDOztBQUNBckIsSUFBQUEsR0FBRyxDQUFDTSxLQUFKLEdBQVlpQixXQUFaO0FBRUFMLElBQUFBLElBQUk7QUFDUCxHQVRELE1BU087QUFDSGpCLElBQUFBLEdBQUcsQ0FBQ1UsVUFBSixDQUFlLEdBQWY7QUFDSDtBQUNKOztBQUVEZixHQUFHLENBQUM0QixNQUFKLENBQVcsSUFBWCxFQUFpQixNQUFNO0FBQ25CZixFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBYSwrQkFBYjtBQUNILENBRkQiLCJzb3VyY2VSb290IjoiL2hvbWUvbmF2ZWVucHJhbmVzaC90ZXN0L3Rlc3RpbjEvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSBcImV4cHJlc3NcIjtcbmltcG9ydCBib2R5UGFyc2VyIGZyb20gXCJib2R5LXBhcnNlclwiO1xuaW1wb3J0IGp3dCBmcm9tIFwianNvbndlYnRva2VuXCI7XG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5cbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xuXG5hcHAuZ2V0KCcvYXBpJywgKHJlcSwgcmVzKSA9PiB7XG4gICAgcmVzLnNlbmQoXCJXZWxjb21lIHRvIE5vZGUgQmFiZWxcIilcbn0pO1xuXG5hcHAucG9zdCgnL2FwaS9hZGQnLCB2ZXJpZnlUb2tlbiwgKHJlcSwgcmVzKSA9PiB7XG4gICAgand0LnZlcmlmeShyZXEudG9rZW4sICdzZWNyZXRrZXknLCAoZXJyLCBhdXRoRGF0YSkgPT4ge1xuICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhyZXEudG9rZW4pXG5cbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHJlcy5zZW5kU3RhdHVzKDQwMyk7XG4gICAgICAgIH1cbiAgICAgICAgcmVzLmpzb24oe1xuICAgICAgICAgICAgbWVzc2FnZTogXCJQb3N0IENyZWF0ZWQuLi4uLlwiLFxuICAgICAgICAgICAgYXV0aERhdGFcbiAgICAgICAgfSlcbiAgICB9KVxuXG59KVxuXG5hcHAucG9zdCgnL2FwaS9sb2dpbicsIChyZXEsIHJlcykgPT4ge1xuICAgIGNvbnN0IHVzZXIgPSB7XG4gICAgICAgIGlkOiAxLFxuICAgICAgICB1c2VybmFtZTogXCJOYXZlZW5cIixcbiAgICAgICAgZW1haWw6ICduYXZlZW5AZ21haWwuY29tJ1xuICAgIH1cbiAgICBqd3Quc2lnbih7XG4gICAgICAgIHVzZXJcbiAgICB9LCAnc2VjcmV0a2V5JywgKGVyciwgdG9rZW4pID0+IHtcbiAgICAgICAgaWYoZXJyKXtcbiAgICAgICAgICAgIHJlcy5zZW5kU3RhdHVzKDQwMyk7XG4gICAgICAgIH1cbiAgICAgICAgcmVzLmpzb24oe1xuICAgICAgICAgICAgdG9rZW5cbiAgICAgICAgfSk7XG4gICAgfSlcbn0pO1xuXG4vL0Zvcm1hdCBvZiBUT0tFTlxuLy9BdXRob3JpemF0aW9uOkJlYXJlciAsYWNjZXNzX3Rva2VuPlxuXG4vL3ZlcmlmeSB0b2tlblxuXG5mdW5jdGlvbiB2ZXJpZnlUb2tlbihyZXEsIHJlcywgbmV4dCkge1xuICAgIC8vZ2V0IEF1dGggaGVhZGVyIHZhbHVlXG4gICAgY29uc3QgYmVhcmVySGVhZGVyID0gcmVxLmhlYWRlcnNbJ2F1dGhvcml6YXRpb24nXTtcbiAgICAvL2NoZWNrIGlmIGJlYXJlciBpcyB1bmRlZmluZWRcbiAgICBpZiAodHlwZW9mIGJlYXJlckhlYWRlciAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgLy9TcGxpdCBhdCB0aGUgc3BhY2VcbiAgICAgICAgY29uc3QgYmVhcmVyID0gYmVhcmVySGVhZGVyLnNwbGl0KCcgJyk7XG4gICAgICAgIC8vR2V0IHRva2VuIGZyb20gYXJyYXlcbiAgICAgICAgY29uc3QgYmVhcmVyVG9rZW4gPSBiZWFyZXJbMV07XG4gICAgICAgIC8vU2V0IHRoZSB0b2tlblxuICAgICAgICByZXEudG9rZW4gPSBiZWFyZXJUb2tlbjtcbiAgICAgICAgXG4gICAgICAgIG5leHQoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXMuc2VuZFN0YXR1cyg0MDMpO1xuICAgIH1cbn1cblxuYXBwLmxpc3Rlbig1MDAwLCAoKSA9PiB7XG4gICAgY29uc29sZS5sb2coYGFwcCBpcyBsaXN0ZW5pbmcgdG8gcG9ydCA1MDAwYCk7XG59KSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "express",
        "bodyParser",
        "jwt",
        "app",
        "use",
        "json",
        "get",
        "req",
        "res",
        "send",
        "post",
        "verifyToken",
        "verify",
        "token",
        "err",
        "authData",
        "console",
        "log",
        "sendStatus",
        "message",
        "user",
        "id",
        "username",
        "email",
        "sign",
        "next",
        "bearerHeader",
        "headers",
        "bearer",
        "split",
        "bearerToken",
        "listen"
      ],
      "mappings": "AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,MAAMC,GAAG,GAAGH,OAAO,EAAnB;AAEAG,GAAG,CAACC,GAAJ,CAAQH,UAAU,CAACI,IAAX,EAAR;AAEAF,GAAG,CAACG,GAAJ,CAAQ,MAAR,EAAgB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC1BA,EAAAA,GAAG,CAACC,IAAJ,CAAS,uBAAT;AACH,CAFD;AAIAN,GAAG,CAACO,IAAJ,CAAS,UAAT,EAAqBC,WAArB,EAAkC,CAACJ,GAAD,EAAMC,GAAN,KAAc;AAC5CN,EAAAA,GAAG,CAACU,MAAJ,CAAWL,GAAG,CAACM,KAAf,EAAsB,WAAtB,EAAmC,CAACC,GAAD,EAAMC,QAAN,KAAmB;AAClD,QAAID,GAAJ,EAAS;AACLE,MAAAA,OAAO,CAACC,GAAR,CAAYV,GAAG,CAACM,KAAhB;AAEAG,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AAEAN,MAAAA,GAAG,CAACU,UAAJ,CAAe,GAAf;AACH;;AACDV,IAAAA,GAAG,CAACH,IAAJ,CAAS;AACLc,MAAAA,OAAO,EAAE,mBADJ;AAELJ,MAAAA;AAFK,KAAT;AAIH,GAZD;AAcH,CAfD;AAiBAZ,GAAG,CAACO,IAAJ,CAAS,YAAT,EAAuB,CAACH,GAAD,EAAMC,GAAN,KAAc;AACjC,QAAMY,IAAI,GAAG;AACTC,IAAAA,EAAE,EAAE,CADK;AAETC,IAAAA,QAAQ,EAAE,QAFD;AAGTC,IAAAA,KAAK,EAAE;AAHE,GAAb;AAKArB,EAAAA,GAAG,CAACsB,IAAJ,CAAS;AACLJ,IAAAA;AADK,GAAT,EAEG,WAFH,EAEgB,CAACN,GAAD,EAAMD,KAAN,KAAgB;AAC5B,QAAGC,GAAH,EAAO;AACHN,MAAAA,GAAG,CAACU,UAAJ,CAAe,GAAf;AACH;;AACDV,IAAAA,GAAG,CAACH,IAAJ,CAAS;AACLQ,MAAAA;AADK,KAAT;AAGH,GATD;AAUH,CAhBD,E,CAkBA;AACA;AAEA;;AAEA,SAASF,WAAT,CAAqBJ,GAArB,EAA0BC,GAA1B,EAA+BiB,IAA/B,EAAqC;AACjC;AACA,QAAMC,YAAY,GAAGnB,GAAG,CAACoB,OAAJ,CAAY,eAAZ,CAArB,CAFiC,CAGjC;;AACA,MAAI,OAAOD,YAAP,KAAwB,WAA5B,EAAyC;AACrC;AACA,UAAME,MAAM,GAAGF,YAAY,CAACG,KAAb,CAAmB,GAAnB,CAAf,CAFqC,CAGrC;;AACA,UAAMC,WAAW,GAAGF,MAAM,CAAC,CAAD,CAA1B,CAJqC,CAKrC;;AACArB,IAAAA,GAAG,CAACM,KAAJ,GAAYiB,WAAZ;AAEAL,IAAAA,IAAI;AACP,GATD,MASO;AACHjB,IAAAA,GAAG,CAACU,UAAJ,CAAe,GAAf;AACH;AACJ;;AAEDf,GAAG,CAAC4B,MAAJ,CAAW,IAAX,EAAiB,MAAM;AACnBf,EAAAA,OAAO,CAACC,GAAR,CAAa,+BAAb;AACH,CAFD",
      "sourceRoot": "/home/naveenpranesh/test/testin1/",
      "sourcesContent": [
        "import express from \"express\";\nimport bodyParser from \"body-parser\";\nimport jwt from \"jsonwebtoken\";\nconst app = express();\n\napp.use(bodyParser.json());\n\napp.get('/api', (req, res) => {\n    res.send(\"Welcome to Node Babel\")\n});\n\napp.post('/api/add', verifyToken, (req, res) => {\n    jwt.verify(req.token, 'secretkey', (err, authData) => {\n        if (err) {\n            console.log(req.token)\n\n            console.log(err);\n            \n            res.sendStatus(403);\n        }\n        res.json({\n            message: \"Post Created.....\",\n            authData\n        })\n    })\n\n})\n\napp.post('/api/login', (req, res) => {\n    const user = {\n        id: 1,\n        username: \"Naveen\",\n        email: 'naveen@gmail.com'\n    }\n    jwt.sign({\n        user\n    }, 'secretkey', (err, token) => {\n        if(err){\n            res.sendStatus(403);\n        }\n        res.json({\n            token\n        });\n    })\n});\n\n//Format of TOKEN\n//Authorization:Bearer ,access_token>\n\n//verify token\n\nfunction verifyToken(req, res, next) {\n    //get Auth header value\n    const bearerHeader = req.headers['authorization'];\n    //check if bearer is undefined\n    if (typeof bearerHeader !== 'undefined') {\n        //Split at the space\n        const bearer = bearerHeader.split(' ');\n        //Get token from array\n        const bearerToken = bearer[1];\n        //Set the token\n        req.token = bearerToken;\n        \n        next();\n    } else {\n        res.sendStatus(403);\n    }\n}\n\napp.listen(5000, () => {\n    console.log(`app is listening to port 5000`);\n})"
      ]
    },
    "sourceType": "module",
    "mtime": 1601686899790
  },
  "{\"sourceRoot\":\"/home/naveenpranesh/test/testin1/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/naveenpranesh/test/testin1\",\"filename\":\"/home/naveenpranesh/test/testin1/app.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/naveenpranesh/test/testin1\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/naveenpranesh/test/testin1/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/naveenpranesh/test/testin1",
      "filename": "/home/naveenpranesh/test/testin1/app.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/naveenpranesh/test/testin1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/naveenpranesh/test/testin1/app.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/naveenpranesh/test/testin1/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/naveenpranesh/test/testin1/",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])();\napp.use(_bodyParser[\"default\"].json());\napp.get('/api', function (req, res) {\n  res.send(\"Welcome to Node Babel\");\n});\napp.post('/api/add', verifyToken, function (req, res) {\n  _jsonwebtoken[\"default\"].verify(req.token, 'secretkey', function (err, authData) {\n    if (err) {\n      console.log(req.token);\n      console.log(err);\n      res.sendStatus(403);\n    }\n\n    res.json({\n      message: \"Post Created.....\",\n      authData: authData\n    });\n  });\n});\napp.post('/api/login', function (req, res) {\n  var user = {\n    id: 1,\n    username: \"Naveen\",\n    email: 'naveen@gmail.com'\n  };\n\n  _jsonwebtoken[\"default\"].sign({\n    user: user\n  }, 'secretkey', function (err, token) {\n    if (err) {\n      res.sendStatus(403);\n    }\n\n    res.json({\n      token: token\n    });\n  });\n}); //Format of TOKEN\n//Authorization:Bearer ,access_token>\n//verify token\n\nfunction verifyToken(req, res, next) {\n  //get Auth header value\n  var bearerHeader = req.headers['authorization']; //check if bearer is undefined\n\n  if (typeof bearerHeader !== 'undefined') {\n    //Split at the space\n    var bearer = bearerHeader.split(' '); //Get token from array\n\n    var bearerToken = bearer[1]; //Set the token\n\n    req.token = bearerToken;\n    next();\n  } else {\n    res.sendStatus(403);\n  }\n}\n\nvar port = process.env.NODE_ENV === 'production' ? process.env.PORT || 80 : 83;\napp.listen(port, function () {\n  console.log(\"app is listening to port 5000\");\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJhcHAiLCJ1c2UiLCJib2R5UGFyc2VyIiwianNvbiIsImdldCIsInJlcSIsInJlcyIsInNlbmQiLCJwb3N0IiwidmVyaWZ5VG9rZW4iLCJqd3QiLCJ2ZXJpZnkiLCJ0b2tlbiIsImVyciIsImF1dGhEYXRhIiwiY29uc29sZSIsImxvZyIsInNlbmRTdGF0dXMiLCJtZXNzYWdlIiwidXNlciIsImlkIiwidXNlcm5hbWUiLCJlbWFpbCIsInNpZ24iLCJuZXh0IiwiYmVhcmVySGVhZGVyIiwiaGVhZGVycyIsImJlYXJlciIsInNwbGl0IiwiYmVhcmVyVG9rZW4iLCJwb3J0IiwicHJvY2VzcyIsImVudiIsIk5PREVfRU5WIiwiUE9SVCIsImxpc3RlbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7OztBQUNBLElBQU1BLEdBQUcsR0FBRywwQkFBWjtBQUVBQSxHQUFHLENBQUNDLEdBQUosQ0FBUUMsdUJBQVdDLElBQVgsRUFBUjtBQUVBSCxHQUFHLENBQUNJLEdBQUosQ0FBUSxNQUFSLEVBQWdCLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQzFCQSxFQUFBQSxHQUFHLENBQUNDLElBQUosQ0FBUyx1QkFBVDtBQUNILENBRkQ7QUFJQVAsR0FBRyxDQUFDUSxJQUFKLENBQVMsVUFBVCxFQUFxQkMsV0FBckIsRUFBa0MsVUFBQ0osR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDNUNJLDJCQUFJQyxNQUFKLENBQVdOLEdBQUcsQ0FBQ08sS0FBZixFQUFzQixXQUF0QixFQUFtQyxVQUFDQyxHQUFELEVBQU1DLFFBQU4sRUFBbUI7QUFDbEQsUUFBSUQsR0FBSixFQUFTO0FBQ0xFLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZWCxHQUFHLENBQUNPLEtBQWhCO0FBRUFHLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSCxHQUFaO0FBRUFQLE1BQUFBLEdBQUcsQ0FBQ1csVUFBSixDQUFlLEdBQWY7QUFDSDs7QUFDRFgsSUFBQUEsR0FBRyxDQUFDSCxJQUFKLENBQVM7QUFDTGUsTUFBQUEsT0FBTyxFQUFFLG1CQURKO0FBRUxKLE1BQUFBLFFBQVEsRUFBUkE7QUFGSyxLQUFUO0FBSUgsR0FaRDtBQWNILENBZkQ7QUFpQkFkLEdBQUcsQ0FBQ1EsSUFBSixDQUFTLFlBQVQsRUFBdUIsVUFBQ0gsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDakMsTUFBTWEsSUFBSSxHQUFHO0FBQ1RDLElBQUFBLEVBQUUsRUFBRSxDQURLO0FBRVRDLElBQUFBLFFBQVEsRUFBRSxRQUZEO0FBR1RDLElBQUFBLEtBQUssRUFBRTtBQUhFLEdBQWI7O0FBS0FaLDJCQUFJYSxJQUFKLENBQVM7QUFDTEosSUFBQUEsSUFBSSxFQUFKQTtBQURLLEdBQVQsRUFFRyxXQUZILEVBRWdCLFVBQUNOLEdBQUQsRUFBTUQsS0FBTixFQUFnQjtBQUM1QixRQUFHQyxHQUFILEVBQU87QUFDSFAsTUFBQUEsR0FBRyxDQUFDVyxVQUFKLENBQWUsR0FBZjtBQUNIOztBQUNEWCxJQUFBQSxHQUFHLENBQUNILElBQUosQ0FBUztBQUNMUyxNQUFBQSxLQUFLLEVBQUxBO0FBREssS0FBVDtBQUdILEdBVEQ7QUFVSCxDQWhCRCxFLENBa0JBO0FBQ0E7QUFFQTs7QUFFQSxTQUFTSCxXQUFULENBQXFCSixHQUFyQixFQUEwQkMsR0FBMUIsRUFBK0JrQixJQUEvQixFQUFxQztBQUNqQztBQUNBLE1BQU1DLFlBQVksR0FBR3BCLEdBQUcsQ0FBQ3FCLE9BQUosQ0FBWSxlQUFaLENBQXJCLENBRmlDLENBR2pDOztBQUNBLE1BQUksT0FBT0QsWUFBUCxLQUF3QixXQUE1QixFQUF5QztBQUNyQztBQUNBLFFBQU1FLE1BQU0sR0FBR0YsWUFBWSxDQUFDRyxLQUFiLENBQW1CLEdBQW5CLENBQWYsQ0FGcUMsQ0FHckM7O0FBQ0EsUUFBTUMsV0FBVyxHQUFHRixNQUFNLENBQUMsQ0FBRCxDQUExQixDQUpxQyxDQUtyQzs7QUFDQXRCLElBQUFBLEdBQUcsQ0FBQ08sS0FBSixHQUFZaUIsV0FBWjtBQUVBTCxJQUFBQSxJQUFJO0FBQ1AsR0FURCxNQVNPO0FBQ0hsQixJQUFBQSxHQUFHLENBQUNXLFVBQUosQ0FBZSxHQUFmO0FBQ0g7QUFDSjs7QUFDRCxJQUFNYSxJQUFJLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxRQUFaLEtBQXlCLFlBQXpCLEdBQXlDRixPQUFPLENBQUNDLEdBQVIsQ0FBWUUsSUFBWixJQUFvQixFQUE3RCxHQUFtRSxFQUFoRjtBQUNBbEMsR0FBRyxDQUFDbUMsTUFBSixDQUFXTCxJQUFYLEVBQWlCLFlBQU07QUFDbkJmLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUjtBQUNILENBRkQiLCJzb3VyY2VSb290IjoiL2hvbWUvbmF2ZWVucHJhbmVzaC90ZXN0L3Rlc3RpbjEvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSBcImV4cHJlc3NcIjtcbmltcG9ydCBib2R5UGFyc2VyIGZyb20gXCJib2R5LXBhcnNlclwiO1xuaW1wb3J0IGp3dCBmcm9tIFwianNvbndlYnRva2VuXCI7XG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5cbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xuXG5hcHAuZ2V0KCcvYXBpJywgKHJlcSwgcmVzKSA9PiB7XG4gICAgcmVzLnNlbmQoXCJXZWxjb21lIHRvIE5vZGUgQmFiZWxcIilcbn0pO1xuXG5hcHAucG9zdCgnL2FwaS9hZGQnLCB2ZXJpZnlUb2tlbiwgKHJlcSwgcmVzKSA9PiB7XG4gICAgand0LnZlcmlmeShyZXEudG9rZW4sICdzZWNyZXRrZXknLCAoZXJyLCBhdXRoRGF0YSkgPT4ge1xuICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhyZXEudG9rZW4pXG5cbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHJlcy5zZW5kU3RhdHVzKDQwMyk7XG4gICAgICAgIH1cbiAgICAgICAgcmVzLmpzb24oe1xuICAgICAgICAgICAgbWVzc2FnZTogXCJQb3N0IENyZWF0ZWQuLi4uLlwiLFxuICAgICAgICAgICAgYXV0aERhdGFcbiAgICAgICAgfSlcbiAgICB9KVxuXG59KVxuXG5hcHAucG9zdCgnL2FwaS9sb2dpbicsIChyZXEsIHJlcykgPT4ge1xuICAgIGNvbnN0IHVzZXIgPSB7XG4gICAgICAgIGlkOiAxLFxuICAgICAgICB1c2VybmFtZTogXCJOYXZlZW5cIixcbiAgICAgICAgZW1haWw6ICduYXZlZW5AZ21haWwuY29tJ1xuICAgIH1cbiAgICBqd3Quc2lnbih7XG4gICAgICAgIHVzZXJcbiAgICB9LCAnc2VjcmV0a2V5JywgKGVyciwgdG9rZW4pID0+IHtcbiAgICAgICAgaWYoZXJyKXtcbiAgICAgICAgICAgIHJlcy5zZW5kU3RhdHVzKDQwMyk7XG4gICAgICAgIH1cbiAgICAgICAgcmVzLmpzb24oe1xuICAgICAgICAgICAgdG9rZW5cbiAgICAgICAgfSk7XG4gICAgfSlcbn0pO1xuXG4vL0Zvcm1hdCBvZiBUT0tFTlxuLy9BdXRob3JpemF0aW9uOkJlYXJlciAsYWNjZXNzX3Rva2VuPlxuXG4vL3ZlcmlmeSB0b2tlblxuXG5mdW5jdGlvbiB2ZXJpZnlUb2tlbihyZXEsIHJlcywgbmV4dCkge1xuICAgIC8vZ2V0IEF1dGggaGVhZGVyIHZhbHVlXG4gICAgY29uc3QgYmVhcmVySGVhZGVyID0gcmVxLmhlYWRlcnNbJ2F1dGhvcml6YXRpb24nXTtcbiAgICAvL2NoZWNrIGlmIGJlYXJlciBpcyB1bmRlZmluZWRcbiAgICBpZiAodHlwZW9mIGJlYXJlckhlYWRlciAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgLy9TcGxpdCBhdCB0aGUgc3BhY2VcbiAgICAgICAgY29uc3QgYmVhcmVyID0gYmVhcmVySGVhZGVyLnNwbGl0KCcgJyk7XG4gICAgICAgIC8vR2V0IHRva2VuIGZyb20gYXJyYXlcbiAgICAgICAgY29uc3QgYmVhcmVyVG9rZW4gPSBiZWFyZXJbMV07XG4gICAgICAgIC8vU2V0IHRoZSB0b2tlblxuICAgICAgICByZXEudG9rZW4gPSBiZWFyZXJUb2tlbjtcbiAgICAgICAgXG4gICAgICAgIG5leHQoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXMuc2VuZFN0YXR1cyg0MDMpO1xuICAgIH1cbn1cbmNvbnN0IHBvcnQgPSBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nID8gKHByb2Nlc3MuZW52LlBPUlQgfHwgODApIDogODM7XG5hcHAubGlzdGVuKHBvcnQsICgpID0+IHtcbiAgICBjb25zb2xlLmxvZyhgYXBwIGlzIGxpc3RlbmluZyB0byBwb3J0IDUwMDBgKTtcbn0pIl19",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "app",
        "use",
        "bodyParser",
        "json",
        "get",
        "req",
        "res",
        "send",
        "post",
        "verifyToken",
        "jwt",
        "verify",
        "token",
        "err",
        "authData",
        "console",
        "log",
        "sendStatus",
        "message",
        "user",
        "id",
        "username",
        "email",
        "sign",
        "next",
        "bearerHeader",
        "headers",
        "bearer",
        "split",
        "bearerToken",
        "port",
        "process",
        "env",
        "NODE_ENV",
        "PORT",
        "listen"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;;;AACA,IAAMA,GAAG,GAAG,0BAAZ;AAEAA,GAAG,CAACC,GAAJ,CAAQC,uBAAWC,IAAX,EAAR;AAEAH,GAAG,CAACI,GAAJ,CAAQ,MAAR,EAAgB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC1BA,EAAAA,GAAG,CAACC,IAAJ,CAAS,uBAAT;AACH,CAFD;AAIAP,GAAG,CAACQ,IAAJ,CAAS,UAAT,EAAqBC,WAArB,EAAkC,UAACJ,GAAD,EAAMC,GAAN,EAAc;AAC5CI,2BAAIC,MAAJ,CAAWN,GAAG,CAACO,KAAf,EAAsB,WAAtB,EAAmC,UAACC,GAAD,EAAMC,QAAN,EAAmB;AAClD,QAAID,GAAJ,EAAS;AACLE,MAAAA,OAAO,CAACC,GAAR,CAAYX,GAAG,CAACO,KAAhB;AAEAG,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AAEAP,MAAAA,GAAG,CAACW,UAAJ,CAAe,GAAf;AACH;;AACDX,IAAAA,GAAG,CAACH,IAAJ,CAAS;AACLe,MAAAA,OAAO,EAAE,mBADJ;AAELJ,MAAAA,QAAQ,EAARA;AAFK,KAAT;AAIH,GAZD;AAcH,CAfD;AAiBAd,GAAG,CAACQ,IAAJ,CAAS,YAAT,EAAuB,UAACH,GAAD,EAAMC,GAAN,EAAc;AACjC,MAAMa,IAAI,GAAG;AACTC,IAAAA,EAAE,EAAE,CADK;AAETC,IAAAA,QAAQ,EAAE,QAFD;AAGTC,IAAAA,KAAK,EAAE;AAHE,GAAb;;AAKAZ,2BAAIa,IAAJ,CAAS;AACLJ,IAAAA,IAAI,EAAJA;AADK,GAAT,EAEG,WAFH,EAEgB,UAACN,GAAD,EAAMD,KAAN,EAAgB;AAC5B,QAAGC,GAAH,EAAO;AACHP,MAAAA,GAAG,CAACW,UAAJ,CAAe,GAAf;AACH;;AACDX,IAAAA,GAAG,CAACH,IAAJ,CAAS;AACLS,MAAAA,KAAK,EAALA;AADK,KAAT;AAGH,GATD;AAUH,CAhBD,E,CAkBA;AACA;AAEA;;AAEA,SAASH,WAAT,CAAqBJ,GAArB,EAA0BC,GAA1B,EAA+BkB,IAA/B,EAAqC;AACjC;AACA,MAAMC,YAAY,GAAGpB,GAAG,CAACqB,OAAJ,CAAY,eAAZ,CAArB,CAFiC,CAGjC;;AACA,MAAI,OAAOD,YAAP,KAAwB,WAA5B,EAAyC;AACrC;AACA,QAAME,MAAM,GAAGF,YAAY,CAACG,KAAb,CAAmB,GAAnB,CAAf,CAFqC,CAGrC;;AACA,QAAMC,WAAW,GAAGF,MAAM,CAAC,CAAD,CAA1B,CAJqC,CAKrC;;AACAtB,IAAAA,GAAG,CAACO,KAAJ,GAAYiB,WAAZ;AAEAL,IAAAA,IAAI;AACP,GATD,MASO;AACHlB,IAAAA,GAAG,CAACW,UAAJ,CAAe,GAAf;AACH;AACJ;;AACD,IAAMa,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAyCF,OAAO,CAACC,GAAR,CAAYE,IAAZ,IAAoB,EAA7D,GAAmE,EAAhF;AACAlC,GAAG,CAACmC,MAAJ,CAAWL,IAAX,EAAiB,YAAM;AACnBf,EAAAA,OAAO,CAACC,GAAR;AACH,CAFD",
      "sourceRoot": "/home/naveenpranesh/test/testin1/",
      "sourcesContent": [
        "import express from \"express\";\nimport bodyParser from \"body-parser\";\nimport jwt from \"jsonwebtoken\";\nconst app = express();\n\napp.use(bodyParser.json());\n\napp.get('/api', (req, res) => {\n    res.send(\"Welcome to Node Babel\")\n});\n\napp.post('/api/add', verifyToken, (req, res) => {\n    jwt.verify(req.token, 'secretkey', (err, authData) => {\n        if (err) {\n            console.log(req.token)\n\n            console.log(err);\n            \n            res.sendStatus(403);\n        }\n        res.json({\n            message: \"Post Created.....\",\n            authData\n        })\n    })\n\n})\n\napp.post('/api/login', (req, res) => {\n    const user = {\n        id: 1,\n        username: \"Naveen\",\n        email: 'naveen@gmail.com'\n    }\n    jwt.sign({\n        user\n    }, 'secretkey', (err, token) => {\n        if(err){\n            res.sendStatus(403);\n        }\n        res.json({\n            token\n        });\n    })\n});\n\n//Format of TOKEN\n//Authorization:Bearer ,access_token>\n\n//verify token\n\nfunction verifyToken(req, res, next) {\n    //get Auth header value\n    const bearerHeader = req.headers['authorization'];\n    //check if bearer is undefined\n    if (typeof bearerHeader !== 'undefined') {\n        //Split at the space\n        const bearer = bearerHeader.split(' ');\n        //Get token from array\n        const bearerToken = bearer[1];\n        //Set the token\n        req.token = bearerToken;\n        \n        next();\n    } else {\n        res.sendStatus(403);\n    }\n}\nconst port = process.env.NODE_ENV === 'production' ? (process.env.PORT || 80) : 83;\napp.listen(port, () => {\n    console.log(`app is listening to port 5000`);\n})"
      ]
    },
    "sourceType": "script",
    "mtime": 1601691536127
  }
}